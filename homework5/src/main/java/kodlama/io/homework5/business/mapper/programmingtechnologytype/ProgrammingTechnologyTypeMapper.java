package kodlama.io.homework5.business.mapper.programmingtechnologytype;

import kodlama.io.homework5.business.requests.programmingtechnologytype.CreateProgrammingTechnologyTypeRequest;
import kodlama.io.homework5.business.requests.programmingtechnologytype.UpdateProgrammingTechnologyTypeRequest;
import kodlama.io.homework5.business.responses.programmingtechnologytype.*;
import kodlama.io.homework5.entities.concretes.ProgrammingTechnologyType;
import org.mapstruct.Mapper;

@Mapper(componentModel = "spring")
public interface ProgrammingTechnologyTypeMapper {

    ProgrammingTechnologyType createProgrammingTechnologyTypeRequestToProgrammingTechnologyType(CreateProgrammingTechnologyTypeRequest createProgrammingTechnologyTypeRequest);

    ProgrammingTechnologyType updateProgrammingTechnologyTypeRequestToProgrammingTechnologyType(UpdateProgrammingTechnologyTypeRequest updateProgrammingTechnologyTypeRequest);

    GetAllProgrammingTechnologyTypesResponse programmingTechnologyTypeToGetAllProgrammingTechnologyTypesResponse(ProgrammingTechnologyType ProgrammingTechnologyType);

    GetByIdProgrammingTechnologyTypeResponse programmingTechnologyTypeToGetByIdProgrammingTechnologyTypeResponse(ProgrammingTechnologyType ProgrammingTechnologyType);

    CreateProgrammingTechnologyTypeResponse programmingTechnologyTypeToCreateProgrammingTechnologyTypeResponse(ProgrammingTechnologyType ProgrammingTechnologyType);

    UpdateProgrammingTechnologyTypeResponse programmingTechnologyTypeToUpdateProgrammingTechnologyTypeResponse(ProgrammingTechnologyType ProgrammingTechnologyType);

    DeleteProgrammingTechnologyTypeResponse programmingTechnologyTypeToDeleteProgrammingTechnologyTypeResponse(ProgrammingTechnologyType ProgrammingTechnologyType);
}